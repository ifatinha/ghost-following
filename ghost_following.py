"""
ghost_following.py

Ferramenta de linha de comando que identifica quais usu√°rios do GitHub que voc√™ segue
n√£o te seguem de volta. Usa a API p√∫blica do GitHub, sem necessidade de autentica√ß√£o.

Funcionalidades:
- Coleta seguidores e seguidos via API REST.
- Lida automaticamente com pagina√ß√£o de resultados.
- Exibe, no terminal, os usu√°rios que n√£o te seguem de volta.

Limita√ß√µes:
- Limite de 60 requisi√ß√µes por hora (API sem token).
- Exige conex√£o com a internet.
"""

# ghost_following.py
import requests

# Fun√ß√£o auxiliar para lidar com a pagina√ß√£o da API do GitHub


def get_all_pages(url):
    """
    Coleta todos os resultados de uma URL paginada da API do GitHub.

    A API do GitHub retorna no m√°ximo 100 itens por p√°gina.
    Esta fun√ß√£o segue os links de pagina√ß√£o (se houver) para obter todos os dados.

    Par√¢metros:
        url (str): A URL inicial da requisi√ß√£o (com `?per_page=100` j√° incluso).

    Retorna:
        list: Lista de dicion√°rios representando os usu√°rios retornados pela API.
    """

    results = []

    while url:
        response = requests.get(url, timeout=30)
        response.raise_for_status()  # Interrompe se a requisi√ß√£o falhar.
        results.extend(response.json())  # Adiciona os dados da p√°gina atual
        # Verifica se a uma pr√≥xima p√°gina na resposta
        url = response.links.get("next", {}).get(url)
    return results

# Extrai apenas os nomes de usu√°rio (login) de cada item retornado pela API


def get_usernames(data):
    """
    Extrai os nomes de usu√°rio (login) de uma lista de dicion√°rios de usu√°rios.

    Par√¢metros:
        data (list): Lista de dicion√°rios retornados pela API do GitHub.

    Retorna:
        set: Conjunto com os nomes de usu√°rio (strings) √∫nicos.
    """
    return {user["login"] for user in data}


# Fun√ß√£o principal do script
def main():
    """
    Executa o script principal para analisar seguidores no GitHub.

    Passos:
    1. Solicita ao usu√°rio seu nome de usu√°rio do GitHub.
    2. Busca a lista de usu√°rios que ele segue.
    3. Busca a lista de usu√°rios que o seguem.
    4. Compara as listas e identifica quem n√£o o segue de volta.
    5. Exibe o resultado no terminal.

    Requer conex√£o com a internet e depende da API p√∫blica do GitHub.
    Limite de 60 requisi√ß√µes por hora sem autentica√ß√£o.
    """
    print("üëª Ghost Following - Descubra quem n√£o te segue de volta no GitHub\n")

    # Solicita o nome de usu√°rio
    username = input("Digite seu nome de usu√°rio do Github: ").strip()

    # Monta as URLs para buscar os dados da API
    following_url = f"https://api.github.com/users/{username}/following?per_page=100"
    followers_url = f"https://api.github.com/users/{username}/followers?per_page=100"

    print("\nüîé Buscando usu√°rios que voc√™ segue...")
    following_data = get_all_pages(following_url)

    print("üîé Buscando seus seguidores...")
    followers_data = get_all_pages(followers_url)

    # Conjuntos de logins para compara√ß√£o
    following = get_usernames(following_data)
    followers = get_usernames(followers_data)

    # Diferen√ßa entre conjuntos: quem voc√™ segue mas n√£o te segue
    not_following_back = following - followers

    print("\nüìã Resultado:")
    if not not_following_back:
        print("üéâ Todos os usu√°rios que voc√™ segue tamb√©m te seguem de volta!")
    else:
        print("üë• Usu√°rios que voc√™ segue mas que **n√£o te seguem de volta**:\n")
        for user in sorted(not_following_back):
            print(f" - {user}")


if __name__ == "__main__":
    main()
